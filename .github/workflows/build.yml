name: build

on:
  push:
    tags:
      - '*'
  workflow_dispatch: # This allows manual triggering

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.x

    - name: Set Go import path
      run: go env -w GO111MODULE=on

    - name: Install dependencies
      run: go mod download    

    - name: Install protobuf
      run: sudo apt update && sudo apt install -y protobuf-compiler

    - name: Build and package
      run: |
        make promu
        promu -v crossbuild
        promu -v crossbuild tarballs
        promu checksum .tarballs

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: .tarballs/graphite-remote-adapter-0.4.1.linux-amd64.tar.gz
        asset_name: graphite-remote-adapter
        tag: ${{ github.ref }}
        overwrite: true
        body: "graphite-remote-adapter-0.4.1"

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload release assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        for file in .tarballs/*; do
          basename=$(basename "$file")
          echo "Uploading $basename to release ${{ github.ref }}"
          gh release upload ${{ github.ref }} "$file" --clobber
        done
